{
  "active": false,
  "connections": {
    "formata_dados": {
      "main": [
        [
          {
            "node": "entra_na_fila",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cadastro_na_lp": {
      "main": [
        [
          {
            "node": "formata_dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "preencheu_dados": {
      "main": [
        [
          {
            "node": "cadastro_na_lp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-08-23T00:27:28.142Z",
  "id": "VzFNcqLseWHToKGp",
  "meta": null,
  "name": "[COACHING] - CRM RAYANE: Opt-in - Parte 1",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const fullNameAnswer = $node[\"cadastro_na_lp\"].json[\"body\"][\"nome\"] || \"\";\nconst emailAnswer = $node[\"cadastro_na_lp\"].json[\"body\"][\"email\"] || \"\";\nconst telefoneClienteOriginal = $node[\"cadastro_na_lp\"].json[\"body\"][\"telefone\"] || '';\nconst carreira = $node[\"cadastro_na_lp\"].json[\"body\"][\"carreira\"] || '';\nconst tempo = $node[\"cadastro_na_lp\"].json[\"body\"][\"tempo\"] || '';\nconst qualificacao = $node[\"cadastro_na_lp\"].json[\"body\"][\"qualificacao\"] || '';\n\nfunction capitalizeName(fullName) {\n    if (typeof fullName === 'undefined') {\n        return { fname: '', lname: '', fullname: '' };\n    }\n\n    const lowerCaseWords = ['da', 'de', 'do', 'di', 'du'];\n    let words = fullName.toLowerCase().split(' ').map((word, index) => {\n        if (lowerCaseWords.includes(word) && index !== 0) {\n            return word;\n        }\n        return word.charAt(0).toUpperCase() + word.slice(1);\n    });\n\n    let fname = words.shift();\n    let lname = words.join(' ');\n\n    return { fname, lname, fullname: fname + ' ' + lname };\n}\n\nfunction formatEmail(email) {\n    return email.toLowerCase().trim();\n}\n\n  const telefoneLimpo = telefoneClienteOriginal.replace(/\\D/g, \"\");\n  const DDI = '55';\n  const DDD = telefoneLimpo.slice(0, 2); // Correção: Extrair os primeiros dois dígitos para obter o DDD\n\n  // Determinar o número de telefone final\n  if (parseInt(DDD) > 28) {\n    telefoneFinal = `${DDI}${DDD}${telefoneLimpo.slice(-8)}`;\n  } else {\n    telefoneFinal = `${DDI}${DDD}${telefoneLimpo.slice(-9)}`;\n  }\n\n\nconst formattedNames = capitalizeName(fullNameAnswer);\nconst formattedEmail = formatEmail(emailAnswer);\nconst result = {\n    ...formattedNames, // Nome formatado\n    email: formattedEmail, // Email formatado\n    whatsapp: telefoneFinal, // WhatsApp formatado\n    carreira: carreira,\n    tempo: tempo,\n    qualificacao: qualificacao\n};\n\n// Aqui estamos ajustando a estrutura do retorno para se adequar ao que o n8n espera\nreturn [{ json: result }];\n"
      },
      "id": "4699c368-ecd7-4073-b7ab-dff65e6c0d7f",
      "name": "formata_dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1480,
        420
      ]
    },
    {
      "parameters": {
        "queue": "[COACHING] - Opt in Rayane",
        "options": {
          "arguments": {
            "argument": [
              {
                "key": "x-queue-type",
                "value": "quorum"
              }
            ]
          },
          "durable": true
        }
      },
      "id": "8d572d6a-d66a-46e4-9a34-bd71383ed542",
      "name": "entra_na_fila",
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1.1,
      "position": [
        1720,
        420
      ],
      "credentials": {
        "rabbitmq": {
          "id": "6klSivWaJBCNmE5C",
          "name": "[RABBITMQ] - Karine Waldrich"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "83ea2456-70a2-41be-89b5-e8314d52fdaf",
              "name": "body.qualificacao",
              "value": "qualificado",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "b0b6f8b8-8d89-46e0-8321-521514f09478",
      "name": "cadastro_na_lp",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1260,
        420
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "4025ecb1-8a6b-4a6f-8775-0234df390d38",
        "options": {}
      },
      "id": "e909dcc9-2d12-48cf-8ffe-780bef5d8708",
      "name": "preencheu_dados",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1040,
        420
      ],
      "webhookId": "4025ecb1-8a6b-4a6f-8775-0234df390d38"
    }
  ],
  "pinData": null,
  "settings": {
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-08-23T00:27:28.142Z",
  "versionId": "3cd5ef15-904d-461b-ac91-e37a090a480a"
}