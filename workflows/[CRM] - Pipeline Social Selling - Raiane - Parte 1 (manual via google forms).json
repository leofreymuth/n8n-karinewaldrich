{
  "active": true,
  "connections": {
    "formata_dados": {
      "main": [
        [
          {
            "node": "inclui_dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados": {
      "main": [
        [
          {
            "node": "formata_dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "inclui_dados": {
      "main": [
        [
          {
            "node": "entra_na_fila",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "google_forms": {
      "main": [
        [
          {
            "node": "dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-05T00:36:18.976Z",
  "id": "h9wL6befc44aaBg6",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[CRM] - Pipeline Social Selling - Raiane - Parte 1 (manual via google forms)",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const fullNameAnswer = $node[\"dados\"].json[\"body\"][\"Nome\"] || \"\";\nconst emailAnswer = $node[\"dados\"].json[\"body\"][\"E-mail\"] || \"\";\nconst telefoneClienteOriginal = $node[\"dados\"].json[\"body\"][\"Telefone\"] || '';\n\nfunction capitalizeName(fullName) {\n    if (!fullName) {\n        return { fname: '', lname: '', fullname: '' };\n    }\n\n    const lowerCaseWords = ['da', 'de', 'do', 'di', 'du'];\n    let words = fullName.trim().toLowerCase().split(' ').map((word, index) => {\n        if (lowerCaseWords.includes(word) && index !== 0) {\n            return word;\n        }\n        return word.charAt(0).toUpperCase() + word.slice(1);\n    });\n\n    let fname = words.shift() || '';\n    let lname = words.join(' ');\n\n    return { fname, lname, fullname: fname + (lname ? ' ' + lname : '') };\n}\n\nfunction formatEmail(email) {\n    return email.toLowerCase().trim();\n}\n\n// Garantir que telefoneClienteOriginal seja uma string antes de usar replace\nconst telefoneLimpo = String(telefoneClienteOriginal).replace(/\\D/g, \"\");\nconst DDI = '55';\nconst DDD = telefoneLimpo.slice(0, 2);\n\n// Determinar o número de telefone final\nconst telefoneFinal = `${DDI}${DDD}${telefoneLimpo.slice(2)}`;\n\nconst formattedNames = capitalizeName(fullNameAnswer);\nconst formattedEmail = formatEmail(emailAnswer);\nconst result = {\n    fname: formattedNames.fname, // Primeiro nome\n    lname: formattedNames.lname, // Sobrenome\n    fullname: formattedNames.fullname, // Nome completo\n    email: formattedEmail, // Email formatado\n    whatsapp: telefoneFinal, // WhatsApp formatado\n    qualificacao: \"qualificado\" // Variável adicional\n};\n\n// Aqui estamos ajustando a estrutura do retorno para se adequar ao que o n8n espera\nreturn [{ json: result }];\n"
      },
      "id": "e5dac5d9-2771-4808-9ba7-466f5ac147b8",
      "name": "formata_dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        260
      ]
    },
    {
      "parameters": {
        "queue": "[CRM] - Pipeline Social Selling - Raiane",
        "options": {
          "arguments": {
            "argument": [
              {
                "key": "x-queue-type",
                "value": "quorum"
              }
            ]
          },
          "durable": true
        }
      },
      "id": "80bd9888-d254-4de6-a083-c95173fa74e6",
      "name": "entra_na_fila",
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1.1,
      "position": [
        1500,
        260
      ],
      "credentials": {
        "rabbitmq": {
          "id": "EpGcMDPOCNYbhT3V",
          "name": "[RABBIT] - KarineWaldrich"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "556b52b9-e3cf-40cb-b943-71823426493f",
              "name": "body.Nome",
              "value": "={{ $json.body.Nome }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "c2f02214-d050-45fc-960d-834354d9ef82",
      "name": "dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        900,
        260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b5d54eaf-eef2-4edd-b2f7-f896ee2ee2ac",
              "name": "carreira",
              "value": "",
              "type": "string"
            },
            {
              "id": "571ac584-6a48-4585-ac44-3746e619e314",
              "name": "tempo",
              "value": "",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "b2548c44-732d-446e-b030-244776f6e85a",
      "name": "inclui_dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1300,
        260
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "5a4c8750-8007-4363-882c-9db1b1e8ad3c",
        "options": {}
      },
      "id": "65b66c00-eca9-46b8-b4d8-7637369f59fd",
      "name": "google_forms",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        700,
        260
      ],
      "webhookId": "5a4c8750-8007-4363-882c-9db1b1e8ad3c"
    }
  ],
  "pinData": {
    "google_forms": [
      {
        "json": {
          "headers": {
            "host": "n8nwebhook.karinewaldrich.com.br",
            "user-agent": "Mozilla/5.0 (compatible; Google-Apps-Script; beanserver; +https://script.google.com; id: UAEmdDd8EWNcxt_2_ZSt_TBVpX7pxMHoeaw)",
            "content-length": "84",
            "accept-encoding": "gzip, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "34.116.22.1",
            "x-forwarded-host": "n8nwebhook.karinewaldrich.com.br",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "cadf6fe75461",
            "x-real-ip": "34.116.22.1"
          },
          "params": {},
          "query": {},
          "body": {
            "Nome": "Leo teste",
            "E-mail": "leonardo.freymuth@gmail.com",
            "Telefone": "51994696045"
          },
          "webhookUrl": "https://n8nwebhook.karinewaldrich.com.br/webhook/5a4c8750-8007-4363-882c-9db1b1e8ad3c",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 600,
    "executionOrder": "v1",
    "errorWorkflow": "Ppi2Q8rUEdph2WkT"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-27T20:53:37.124Z",
      "updatedAt": "2024-08-27T20:53:37.124Z",
      "id": "jvoaBLNnTWygoJHc",
      "name": "Google forms"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-09-05T00:41:31.381Z",
  "versionId": "e08a208f-1372-46eb-83d3-d47c7f8bc654"
}